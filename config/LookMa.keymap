#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <120>;
            bindings = <&kp>, <&kp>;

            display-name = "Mod-Tap";
        };

        mkg: hold_mouse_key_press_tap_toggle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <80>;
            quick-tap-ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mkp>, <&tog>;
        };

        ec_s: mouse_scroll {
            compatible = "zmk,behavior-input-two-axis";
            #binding-cells = <1>;
            trigger-period-ms = <4>; // slow down for OTA, default is 3ms
            x-input-code = <INPUT_REL_HWHEEL>;
            y-input-code = <INPUT_REL_WHEEL>;
            time-to-max-speed-ms = <177>;
            acceleration-exponent = <0>;
        };

        rot_enc: sensor_rotate {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&ec_s MOVE_Y(72)>, <&ec_s MOVE_Y(-72)>;

            tap-ms = <40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LG(C)   &kp LG(V)   &kp LG(LC(Q))   &kp C_PLAY_PAUSE  &kp C_NEXT        &kp C_BRI_DEC                        &kp C_BRI_UP  &kp LG(Z)         &kp LG(LS(Z))  &kp LG(F)       &kp LC(R)      &kp LG(LS(N5))
&kp ESCAPE  &kp Q       &kp W           &kp E             &kp R             &kp T                                &kp Y         &kp U             &kp I          &kp O           &kp P          &kp BACKSPACE
&kp TAB     &mt LGUI A  &mt LEFT_ALT S  &mt LCTRL D       &mt LEFT_SHIFT F  &kp G                                &kp H         &mt LEFT_SHIFT J  &mt LCTRL K    &mt LEFT_ALT L  &mt LGUI SEMI  &kp SQT
&mo 3       &kp Z       &kp X           &kp C             &kp V             &kp B                                &kp N         &kp M             &kp COMMA      &kp DOT         &kp SLASH      &kp RET
                                        &mo 2             &mo 3             &kp SPACE        &mo 1      &mo 1    &mo 3         &kp MINUS         &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };

        layer_1 {
            bindings = <
&trans        &trans         &trans            &trans     &trans           &trans                             &trans        &trans           &trans           &trans           &trans     &trans
&kp TILDE     &kp EXCL       &kp AT            &kp HASH   &kp DOLLAR       &kp PRCNT                          &kp PLUS      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS  &kp BACKSLASH
&kp CAPS      &kp AMPERSAND  &kp PIPE          &kp GRAVE  &kp RIGHT_ARROW  &trans                             &kp ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp SLASH  &kp PIPE
&kp CAPSLOCK  &kp LESS_THAN  &kp GREATER_THAN  &kp CARET  &trans           &trans                             &kp SLASH     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SLASH  &trans
                                               &trans     &trans           &trans       &trans      &trans    &kp EQUAL     &kp KP_NUMBER_0  &kp PERIOD
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };

        bt_layer {
            bindings = <
&trans  &trans  &trans     &bootloader     &trans  &trans                          &trans  &trans     &trans        &trans  &trans  &trans
&trans  &trans  &trans     &bt BT_CLR      &trans  &trans                          &trans  &trans     &trans        &trans  &trans  &trans
&trans  &trans  &trans     &bt BT_CLR_ALL  &trans  &trans                          &trans  &mkp LCLK  &mkp RCLK     &trans  &trans  &trans
&tog 4  &tog 0  &soft_off  &bt BT_SEL 0    &trans  &trans                          &trans  &mkp MCLK  &msc SCRL_UP  &trans  &trans  &trans
                           &trans          &trans  &trans    &trans      &trans    &trans  &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans                          &trans  &trans                &trans                 &trans  &trans  &trans
&trans  &trans  &trans          &kp UP_ARROW    &trans           &trans                          &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans                          &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans                          &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans
                                &trans          &trans           &trans    &trans      &trans    &trans  &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };

        Gaming {
            bindings = <
&kp LG(C)   &kp LG(V)  &kp LG(LC(Q))  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_BRI_DEC                        &kp C_BRI_UP  &kp LG(Z)         &kp LG(LS(Z))  &kp LG(F)       &kp LC(R)      &kp LG(LS(N5))
&kp ESCAPE  &kp Q      &kp W          &kp E             &kp R       &kp T                                &kp Y         &kp U             &kp I          &kp O           &kp P          &kp BACKSPACE
&kp TAB     &kp A      &kp S          &kp D             &kp F       &kp G                                &kp H         &mt LEFT_SHIFT J  &mt LCTRL K    &mt LEFT_ALT L  &mt LGUI SEMI  &kp SQT
&mo 3       &kp Z      &kp X          &kp C             &kp V       &kp B                                &kp N         &kp M             &kp COMMA      &kp DOT         &kp SLASH      &kp RET
                                      &mo 2             &mo 3       &kp SPACE        &mo 1      &mo 1    &mo 3         &kp MINUS         &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };
    };
};
