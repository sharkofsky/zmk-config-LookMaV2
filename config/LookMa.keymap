#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;

            display-name = "Mod-Tap";
        };

        mkg: hold_mouse_key_press_tap_toggle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <80>;
            quick-tap-ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mkp>, <&tog>;
        };

        ec_s: mouse_scroll {
            compatible = "zmk,behavior-input-two-axis";
            #binding-cells = <1>;
            trigger-period-ms = <4>; // slow down for OTA, default is 3ms
            x-input-code = <INPUT_REL_HWHEEL>;
            y-input-code = <INPUT_REL_WHEEL>;
            time-to-max-speed-ms = <177>;
            acceleration-exponent = <0>;
        };

        rot_enc: sensor_rotate {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&ec_s MOVE_Y(72)>, <&ec_s MOVE_Y(-72)>;

            tap-ms = <40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LG(C)   &kp LG(V)   &kp LG(LC(Q))   &kp C_PLAY_PAUSE  &kp C_NEXT        &kp C_BRI_DEC                                         &kp C_BRI_UP   &kp LG(Z)         &kp LG(LS(Z))  &kp LG(F)       &kp LC(R)      &mt LG(LS(N5)) LS(LG(LC(NUMBER_4)))
&kp ESCAPE  &kp Q       &lt 3 W         &lt 2 E           &lt 1 R           &kp T                                                 &kp Y          &lt 1 U           &lt 2 I        &lt 3 O         &kp P          &kp K_MUTE
&kp LG(C)   &mt LGUI A  &mt LEFT_ALT S  &mt LCTRL D       &mt LEFT_SHIFT F  &lt 4 G                                               &kp H          &mt LEFT_SHIFT J  &mt LCTRL K    &mt LEFT_ALT L  &mt LGUI SEMI  &kp SQT
&kp LG(V)   &kp Z       &kp X           &kp C             &kp V             &kp B                                                 &kp N          &kp M             &kp COMMA      &kp DOT         &kp SLASH      &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT
                                        &tog 4            &kp TAB           &kp SPACE        &mt LEFT_SHIFT TAB      &kp ENTER    &kp BACKSPACE  &kp MINUS         &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };

        layer_1 {
            bindings = <
&trans        &trans         &trans            &trans     &trans         &trans                                    &trans         &trans        &trans        &trans        &trans     &trans
&kp TILDE     &kp EXCL       &kp AT            &kp HASH   &kp DOLLAR     &kp PRCNT                                 &kp PLUS       &kp N7        &kp N8        &kp N9        &kp MINUS  &kp BACKSPACE
&kp CAPS      &kp AMPERSAND  &kp PIPE          &kp GRAVE  &kp BACKSLASH  &trans                                    &kp ASTERISK   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COLON  &kp PIPE
&kp CAPSLOCK  &kp LESS_THAN  &kp GREATER_THAN  &kp CARET  &kp PIPE       &trans                                    &kp SLASH      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &kp BSLH
                                               &trans     &trans         &trans       &caps_word      &kp EQUAL    &kp BACKSPACE  &kp N0        &kp PERIOD
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };

        bt_layer {
            bindings = <
&trans  &trans  &trans     &bootloader     &trans  &trans                          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans     &bt BT_CLR      &trans  &trans                          &trans        &kp F7        &kp F8        &kp F9        &trans        &trans
&trans  &trans  &trans     &bt BT_CLR_ALL  &trans  &trans                          &trans        &kp F4        &kp F5        &kp F6        &kp F12       &trans
&tog 4  &trans  &soft_off  &trans          &trans  &trans                          &trans        &kp F1        &kp F2        &kp F3        &kp F10       &kp F11
                           &trans          &trans  &trans    &trans      &trans    &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans                          &trans  &trans                &trans                 &trans  &trans  &trans
&trans  &trans  &trans          &kp UP_ARROW    &trans           &trans                          &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans                          &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans                          &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &trans
                                &trans          &trans           &trans    &trans      &trans    &trans  &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };

        Gaming {
            bindings = <
&kp LG(C)       &kp LG(V)  &kp LG(LC(Q))  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_BRI_DEC                                     &kp C_BRI_UP              &kp LG(Z)     &kp LG(LS(Z))  &kp LG(F)       &kp LC(R)      &kp LG(LS(N5))
&kp ESCAPE      &kp T      &kp Q          &kp W             &kp E       &kp R                                             &kp N0                    &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3    &kp NUMBER_4   &kp BACKSPACE
&kp TAB         &kp G      &kp A          &kp S             &kp D       &kp F                                             &mkp MCLK                 &mkp LCLK     &mkp RCLK      &mt LEFT_ALT L  &mt LGUI SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z      &kp X          &kp C             &kp V       &kp B                                             &kp N5                    &kp NUMBER_6  &kp N7         &kp N8          &kp N9         &kp RET
                                          &tog 4            &kp LCTRL   &kp SPACE        &kp LEFT_SHIFT      &kp ENTER    &mt LEFT_SHIFT BACKSPACE  &kp LEFT_ALT  &kp LGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>, <&rot_enc>;
        };
    };
};
